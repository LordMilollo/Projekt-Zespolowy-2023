import processing.serial.*;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.io.File;

Serial myPort;
final int cameraWidth = 96;
final int cameraHeight = 96;
final int cameraBytesPerPixel = 1;
final int bytesPerFrame = cameraWidth * cameraHeight * cameraBytesPerPixel;

PImage myImage;
byte[] frameBuffer = new byte[bytesPerFrame];
byte[] header = new byte[3];
byte[] score = new byte[2];

boolean captureScreen = false;
int captureTimer = 0;
final int captureInterval = 10000;

String screenshotPath = "C:/kamera_zdjecia/screenshot.png";

void setup() {
  size(320, 320);
  myPort = new Serial(this, "COM5", 921600);
  
  myPort.buffer(bytesPerFrame);
  myImage = createImage(cameraWidth, cameraHeight, GRAY);
  
  fill(255, 0, 0);
}

void draw() {
  image(myImage, 0, 0, 320, 320);
  
  if (captureScreen) {
    if (millis() - captureTimer >= captureInterval) {
      captureTimer = millis();
      saveScreenshot();
    }
    captureScreen = false;
  }
}

int state = 0;
int read = 0;
int result = 0;
int startbyte;

void serialEvent(Serial myPort) {
  if (read == 0) {
    startbyte = myPort.read();
    if (startbyte == 0x55) {
      state = 1;
    }
    if (startbyte == 0xAA && state == 1) {
      read = 1;
    }
    if (startbyte == 0xBB && state == 1) {
      result = 1;
    }
  }
  if (result == 1) {
    myPort.readBytes(score);
    result = 0;
  }
  if (read == 1) {
    myPort.readBytes(frameBuffer);
    
    ByteBuffer bb = ByteBuffer.wrap(frameBuffer);
    bb.order(ByteOrder.BIG_ENDIAN);
    int i = 0;
    while (bb.hasRemaining()) {
      short p = bb.getShort();
      int p1 = (p >> 8) & 0xFF;
      int p2 = p & 0xFF;
      
      int r = p1;
      int g = p1;
      int b = p1;
      
      myImage.pixels[i++] = color(r, g, b);
      r = p2;
      g = p2;
      b = p2;
      
      myImage.pixels[i++] = color(r, g, b);
    }
    read = 0;
    
    captureScreen = true;
  }
  myImage.updatePixels();
}

void saveScreenshot() {
  saveFrame(screenshotPath);
}
