#include <stdio.h>
#include "pico/stdlib.h"
#include "arducampico.h"

#define IMAGE_WIDTH 96
#define IMAGE_HEIGHT 96
#define IMAGE_SIZE (IMAGE_WIDTH * IMAGE_HEIGHT)

uint8_t header[2] = {0x55, 0xAA};
uint8_t image[IMAGE_SIZE] = {0};
struct arducam_config config;

bool captureInProgress = false;
uint32_t captureStartTime = 0;

void captureAndSaveImage() {
  arducam_capture_frame(&config, image);

  char filename[20];
  snprintf(filename, sizeof(filename), "/image_%lu.bin", time(NULL));
  FILE* file = fopen(filename, "wb");
  if (file) {
    fwrite(header, sizeof(uint8_t), 2, file);
    fwrite(image, sizeof(uint8_t), IMAGE_SIZE, file);
    fclose(file);
  }
}

void setup() {
  stdio_init_all();

  gpio_init(PIN_LED);
  gpio_set_dir(PIN_LED, GPIO_OUT);

  config.sccb = i2c0;
  config.sccb_mode = I2C_MODE_16_8;
  config.sensor_address = 0x24;
  config.pin_sioc = PIN_CAM_SIOC;
  config.pin_siod = PIN_CAM_SIOD;
  config.pin_resetb = PIN_CAM_RESETB;
  config.pin_xclk = PIN_CAM_XCLK;
  config.pin_vsync = PIN_CAM_VSYNC;
  config.pin_y2_pio_base = PIN_CAM_Y2_PIO_BASE;
  config.pio = pio0;
  config.pio_sm = 0;
  config.dma_channel = 0;
  arducam_init(&config);
}

void loop() {
  if (!captureInProgress) {
    
    captureInProgress = true;
    gpio_put(PIN_LED, 1);

    captureAndSaveImage();

    gpio_put(PIN_LED, 0);
    captureInProgress = false;

    sleep_ms(10000);
  }
}
